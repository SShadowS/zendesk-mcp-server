version: '3.8'

services:
  # Nginx reverse proxy for HTTPS
  nginx:
    image: nginx:alpine
    container_name: gotenberg-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./ssl-dhparams.pem:/etc/ssl/certs/dhparam.pem:ro
    depends_on:
      - api-gateway
    networks:
      - gotenberg-net
    restart: unless-stopped

  # API Gateway - Node.js middleware for authentication
  api-gateway:
    build: ./api-gateway
    container_name: gotenberg-gateway
    environment:
      - NODE_ENV=production
      - GOTENBERG_URL=http://gotenberg:3000
      - PORT=3000
      - MAX_FILE_SIZE=104857600  # 100MB
      - REQUEST_TIMEOUT=120000    # 2 minutes
    volumes:
      - ./api-keys.json:/app/api-keys.json:ro
    depends_on:
      - gotenberg
    networks:
      - gotenberg-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Gotenberg service - Internal only
  gotenberg:
    image: gotenberg/gotenberg:8
    container_name: gotenberg-service
    command:
      - "gotenberg"
      - "--api-timeout=120s"
      - "--api-root-path=/gotenberg"
      - "--chromium-max-queue-size=100"
      - "--libreoffice-max-queue-size=100"
      - "--webhook-max-retry=3"
      - "--webhook-retry-min-wait=1s"
      - "--webhook-retry-max-wait=30s"
    environment:
      - LOG_LEVEL=info
    tmpfs:
      # Use memory-based tmpfs for any temporary files
      # This ensures no data is written to disk
      - /tmp:size=1G
      - /gotenberg/tmp:size=1G
    networks:
      - gotenberg-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

networks:
  gotenberg-net:
    driver: bridge
    internal: false